//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.4.4
//     from Assets/Input/Controls.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @Controls : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @Controls()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""Controls"",
    ""maps"": [
        {
            ""name"": ""FPS"",
            ""id"": ""ef318d25-fbe4-4f8f-863c-9791a5bed2e1"",
            ""actions"": [
                {
                    ""name"": ""Move"",
                    ""type"": ""Value"",
                    ""id"": ""483f6752-4dcb-4041-a7a3-ac5c9bc67548"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Jump"",
                    ""type"": ""Button"",
                    ""id"": ""2c20a43a-3732-47c1-91de-dee0f1bfa2c6"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Crouch"",
                    ""type"": ""Button"",
                    ""id"": ""0b4ff3bb-8f79-40e1-bb4c-1588952f3390"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Sprint"",
                    ""type"": ""Button"",
                    ""id"": ""bcf771eb-8144-4f7b-bb59-dccbd190d480"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""FlashOnOff"",
                    ""type"": ""Button"",
                    ""id"": ""a1f18bed-eaed-4496-b8ae-bab7bf953493"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""TakePicture"",
                    ""type"": ""Button"",
                    ""id"": ""cdfd5aac-835c-401e-82c8-1a8bcca5c754"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""LineUpShot"",
                    ""type"": ""Button"",
                    ""id"": ""e6e24fdb-6dcc-4e93-97cf-94eefd823464"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""95fb11af-da39-4ee3-8efa-b429ba0a6338"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""f7689bdd-bf63-47a6-b0be-8ae8c364abd2"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""d6d174a9-591e-415b-ac81-22b4cf6b251a"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""da4f41b8-5c7d-4400-bf44-19471a6fb24e"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""2200ea0c-ff9b-4e2b-bba0-aa3f240fc4dc"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""d5625a3c-967f-47a3-8e0c-1f15db477062"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""55047058-30e4-4eba-a20c-9162d8c1d496"",
                    ""path"": ""<Keyboard>/ctrl"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Crouch"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6f8a50e9-1d48-454b-b270-f19af594febe"",
                    ""path"": ""<Keyboard>/shift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Sprint"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7000a2ad-3a30-4cfb-b38a-63b3ca3e27c1"",
                    ""path"": ""<Keyboard>/f"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""FlashOnOff"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7bce86e3-4e83-4548-912c-02ac11bc9756"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""TakePicture"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2d7eadab-5b31-437a-a849-0d93b87b7af5"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LineUpShot"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // FPS
        m_FPS = asset.FindActionMap("FPS", throwIfNotFound: true);
        m_FPS_Move = m_FPS.FindAction("Move", throwIfNotFound: true);
        m_FPS_Jump = m_FPS.FindAction("Jump", throwIfNotFound: true);
        m_FPS_Crouch = m_FPS.FindAction("Crouch", throwIfNotFound: true);
        m_FPS_Sprint = m_FPS.FindAction("Sprint", throwIfNotFound: true);
        m_FPS_FlashOnOff = m_FPS.FindAction("FlashOnOff", throwIfNotFound: true);
        m_FPS_TakePicture = m_FPS.FindAction("TakePicture", throwIfNotFound: true);
        m_FPS_LineUpShot = m_FPS.FindAction("LineUpShot", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // FPS
    private readonly InputActionMap m_FPS;
    private IFPSActions m_FPSActionsCallbackInterface;
    private readonly InputAction m_FPS_Move;
    private readonly InputAction m_FPS_Jump;
    private readonly InputAction m_FPS_Crouch;
    private readonly InputAction m_FPS_Sprint;
    private readonly InputAction m_FPS_FlashOnOff;
    private readonly InputAction m_FPS_TakePicture;
    private readonly InputAction m_FPS_LineUpShot;
    public struct FPSActions
    {
        private @Controls m_Wrapper;
        public FPSActions(@Controls wrapper) { m_Wrapper = wrapper; }
        public InputAction @Move => m_Wrapper.m_FPS_Move;
        public InputAction @Jump => m_Wrapper.m_FPS_Jump;
        public InputAction @Crouch => m_Wrapper.m_FPS_Crouch;
        public InputAction @Sprint => m_Wrapper.m_FPS_Sprint;
        public InputAction @FlashOnOff => m_Wrapper.m_FPS_FlashOnOff;
        public InputAction @TakePicture => m_Wrapper.m_FPS_TakePicture;
        public InputAction @LineUpShot => m_Wrapper.m_FPS_LineUpShot;
        public InputActionMap Get() { return m_Wrapper.m_FPS; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(FPSActions set) { return set.Get(); }
        public void SetCallbacks(IFPSActions instance)
        {
            if (m_Wrapper.m_FPSActionsCallbackInterface != null)
            {
                @Move.started -= m_Wrapper.m_FPSActionsCallbackInterface.OnMove;
                @Move.performed -= m_Wrapper.m_FPSActionsCallbackInterface.OnMove;
                @Move.canceled -= m_Wrapper.m_FPSActionsCallbackInterface.OnMove;
                @Jump.started -= m_Wrapper.m_FPSActionsCallbackInterface.OnJump;
                @Jump.performed -= m_Wrapper.m_FPSActionsCallbackInterface.OnJump;
                @Jump.canceled -= m_Wrapper.m_FPSActionsCallbackInterface.OnJump;
                @Crouch.started -= m_Wrapper.m_FPSActionsCallbackInterface.OnCrouch;
                @Crouch.performed -= m_Wrapper.m_FPSActionsCallbackInterface.OnCrouch;
                @Crouch.canceled -= m_Wrapper.m_FPSActionsCallbackInterface.OnCrouch;
                @Sprint.started -= m_Wrapper.m_FPSActionsCallbackInterface.OnSprint;
                @Sprint.performed -= m_Wrapper.m_FPSActionsCallbackInterface.OnSprint;
                @Sprint.canceled -= m_Wrapper.m_FPSActionsCallbackInterface.OnSprint;
                @FlashOnOff.started -= m_Wrapper.m_FPSActionsCallbackInterface.OnFlashOnOff;
                @FlashOnOff.performed -= m_Wrapper.m_FPSActionsCallbackInterface.OnFlashOnOff;
                @FlashOnOff.canceled -= m_Wrapper.m_FPSActionsCallbackInterface.OnFlashOnOff;
                @TakePicture.started -= m_Wrapper.m_FPSActionsCallbackInterface.OnTakePicture;
                @TakePicture.performed -= m_Wrapper.m_FPSActionsCallbackInterface.OnTakePicture;
                @TakePicture.canceled -= m_Wrapper.m_FPSActionsCallbackInterface.OnTakePicture;
                @LineUpShot.started -= m_Wrapper.m_FPSActionsCallbackInterface.OnLineUpShot;
                @LineUpShot.performed -= m_Wrapper.m_FPSActionsCallbackInterface.OnLineUpShot;
                @LineUpShot.canceled -= m_Wrapper.m_FPSActionsCallbackInterface.OnLineUpShot;
            }
            m_Wrapper.m_FPSActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Move.started += instance.OnMove;
                @Move.performed += instance.OnMove;
                @Move.canceled += instance.OnMove;
                @Jump.started += instance.OnJump;
                @Jump.performed += instance.OnJump;
                @Jump.canceled += instance.OnJump;
                @Crouch.started += instance.OnCrouch;
                @Crouch.performed += instance.OnCrouch;
                @Crouch.canceled += instance.OnCrouch;
                @Sprint.started += instance.OnSprint;
                @Sprint.performed += instance.OnSprint;
                @Sprint.canceled += instance.OnSprint;
                @FlashOnOff.started += instance.OnFlashOnOff;
                @FlashOnOff.performed += instance.OnFlashOnOff;
                @FlashOnOff.canceled += instance.OnFlashOnOff;
                @TakePicture.started += instance.OnTakePicture;
                @TakePicture.performed += instance.OnTakePicture;
                @TakePicture.canceled += instance.OnTakePicture;
                @LineUpShot.started += instance.OnLineUpShot;
                @LineUpShot.performed += instance.OnLineUpShot;
                @LineUpShot.canceled += instance.OnLineUpShot;
            }
        }
    }
    public FPSActions @FPS => new FPSActions(this);
    public interface IFPSActions
    {
        void OnMove(InputAction.CallbackContext context);
        void OnJump(InputAction.CallbackContext context);
        void OnCrouch(InputAction.CallbackContext context);
        void OnSprint(InputAction.CallbackContext context);
        void OnFlashOnOff(InputAction.CallbackContext context);
        void OnTakePicture(InputAction.CallbackContext context);
        void OnLineUpShot(InputAction.CallbackContext context);
    }
}
